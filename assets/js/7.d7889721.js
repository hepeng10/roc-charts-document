(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{356:function(n,t,s){"use strict";s.r(t);var e=s(43),a=Object(e.a)({},(function(){var n=this.$createElement,t=this._self._c||n;return t("ContentSlotsDistributor",{attrs:{"slot-key":this.$parent.slotKey}},[t("h1",{attrs:{id:"目录结构"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#目录结构"}},[this._v("#")]),this._v(" 目录结构")]),this._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("└── src\n    ├── chart  (roc-charts 根目录，所有图谱文件都在这里面)\n    │   ├── charts  (各种图谱的坐标算法具体实现)\n    │   │   ├── annular\n    │   │   ├── circle\n    │   │   └── force\n    │   ├── component  (封装图谱用的 DOM 组件，原生 JS 实现)\n    │   │   ├── IconBtn\n    │   │   └── IconSelect\n    │   ├── config (图谱的一些配置)\n    │   ├── core (核心代码)\n    │   │   ├── chart  (图谱算法基类)\n    │   │   ├── event  (事件类，订阅发布模式)\n    │   │   ├── graph  (绘制各种图形的具体实现)\n    │   │   ├── painter  (画笔类)\n    │   │   ├── plugin  (插件基类)\n    │   │   ├── scene  (场景类)\n    │   │   └── util  (暴露给用户用于操作图谱的一些常用方法)\n    │   ├── images\n    │   │   ├── chartIcon\n    │   │   └── pluginIcon\n    │   ├── plugins  (插件目录，各种插件的具体实现)\n    │   ├── styles  (图谱的公共样式)\n    │   └── utils  (图谱用的一些工具方法)\n    └── containers\n        └── test  (调用图谱的 demo 文件)\n")])])])])}),[],!1,null,null,null);t.default=a.exports}}]);